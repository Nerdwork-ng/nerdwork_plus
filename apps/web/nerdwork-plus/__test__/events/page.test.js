"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const page_1 = __importDefault(require("@/app/(external)/events/page"));
require("@testing-library/jest-dom");
const react_1 = require("@testing-library/react");
describe("Events Page", () => {
    beforeEach(() => {
        (0, react_1.render)(<page_1.default />);
    });
    // NAVIGATION BAR TESTS
    it("renders navigation menu", () => {
        const nav = react_1.screen.getByRole("navigation");
        const navLogo = (0, react_1.within)(nav).getAllByAltText(/nerdwork logo/i);
        const loginButton = (0, react_1.within)(nav).getByRole("button", { name: /log in/i });
        const signupButton = (0, react_1.within)(nav).getByRole("button", { name: /sign up/i });
        expect(nav).toBeInTheDocument();
        expect(navLogo).toHaveLength(2);
        expect(react_1.screen.getByRole("link", { name: /events/i })).toBeInTheDocument();
        expect(react_1.screen.getAllByRole("link", { name: /nerdwork+/i })[0]).toBeInTheDocument();
        expect(loginButton).toBeInTheDocument();
        expect(signupButton).toBeInTheDocument();
    });
    // HERO SECTION TESTS
    it("renders events hero section", () => {
        const hero = react_1.screen.getByTestId("event-hero");
        const heading = react_1.screen.getByRole("heading", { level: 1 });
        const registerButton = (0, react_1.within)(hero).getByRole("button", {
            name: /register/i,
        });
        const eventsButton = (0, react_1.within)(hero).getByRole("button", { name: /events/i });
        const prevButton = (0, react_1.within)(hero).getByTestId("previous-slide");
        const nextButton = (0, react_1.within)(hero).getByTestId("next-slide");
        expect(hero).toBeInTheDocument();
        expect(heading).toBeInTheDocument();
        expect(registerButton).toBeInTheDocument();
        expect(eventsButton).toBeInTheDocument();
        expect(prevButton).toBeInTheDocument();
        expect(nextButton).toBeInTheDocument();
    });
    // EVENTS LIST SECTION TESTS
    it("renders events list section", () => {
        const community = react_1.screen.getByTestId("events-list");
        const heading = (0, react_1.within)(community).getByRole("heading", { level: 3 });
        const allEvents = (0, react_1.within)(community).getAllByRole("button", {
            name: /all events/i,
        });
        expect(community).toBeInTheDocument();
        expect(heading).toBeInTheDocument();
        expect(allEvents[0]).toBeInTheDocument();
        expect(allEvents).toHaveLength(2);
    });
    // EVENT STATS SECTION
    it("renders events statistics section", () => {
        const eventStats = react_1.screen.getByTestId("events-stats");
        const heading = (0, react_1.within)(eventStats).getAllByRole("heading", { level: 2 });
        const hofImages = (0, react_1.within)(eventStats).getAllByAltText(/fame image/i);
        const sponsors = (0, react_1.within)(eventStats).getAllByAltText(/logo/i);
        expect(eventStats).toBeInTheDocument();
        expect(heading).toHaveLength(3);
        expect(hofImages).toHaveLength(18);
        expect(sponsors).toHaveLength(10);
    });
    // FAQ SECTION TESTS
    it("renders the faq section", () => {
        const faq = react_1.screen.getByTestId("faq");
        const heading = (0, react_1.within)(faq).getByRole("heading", { level: 2 });
        const contact = (0, react_1.within)(faq).getAllByRole("button", {
            name: /contact support/i,
        });
        const accordionItems = (0, react_1.within)(faq).getAllByRole("button", {
            expanded: false,
        });
        expect(faq).toBeInTheDocument();
        expect(heading).toBeInTheDocument();
        expect(contact).toHaveLength(2);
        expect(accordionItems).toHaveLength(10);
    });
    // FOOTER TESTS
    it("renders footer section", () => {
        const footer = react_1.screen.getByRole("contentinfo");
        const footerLogo = (0, react_1.within)(footer).getByAltText(/nerdwork logo/i);
        const footerImage = (0, react_1.within)(footer).getByAltText(/footer image/i);
        const input = (0, react_1.within)(footer).getByPlaceholderText(/email address/i);
        const signupButton = (0, react_1.within)(footer).getByRole("button", {
            name: /sign up/i,
        });
        expect(footer).toBeInTheDocument();
        expect(footerLogo).toBeInTheDocument();
        expect(footerImage).toBeInTheDocument();
        expect(input).toBeInTheDocument();
        expect(signupButton).toBeInTheDocument();
    });
});
//# sourceMappingURL=data:application/json;base64,