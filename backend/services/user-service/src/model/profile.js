import { pgTable, uuid, text, timestamp, json, boolean } from 'drizzle-orm/pg-core';
import { authUsers } from './auth.js';
export const userProfiles = pgTable('user_profiles', {
    id: uuid('id').primaryKey().defaultRandom(),
    authUserId: uuid('auth_user_id')
        .notNull()
        .references(() => authUsers.id, { onDelete: 'cascade' }),
    firstName: text('first_name'),
    lastName: text('last_name'),
    displayName: text('display_name').notNull(),
    bio: text('bio'),
    avatarUrl: text('avatar_url'),
    dateOfBirth: timestamp('date_of_birth', { mode: 'date' }),
    country: text('country'),
    timezone: text('timezone'),
    language: text('language').notNull(),
    preferences: json('preferences').notNull(),
    // Creator-specific fields
    isCreator: boolean('is_creator').notNull().default(false),
    creatorName: text('creator_name'), // Public creator name
    creatorBio: text('creator_bio'), // Creator description
    socialLinks: json('social_links'), // Twitter, Instagram, etc.
    creatorVerified: boolean('creator_verified').notNull().default(false),
    createdAt: timestamp('created_at', { mode: 'date' }).notNull().defaultNow(),
    updatedAt: timestamp('updated_at', { mode: 'date' }).notNull().defaultNow(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInByb2ZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxJQUFJLEVBQ0osSUFBSSxFQUNKLFNBQVMsRUFDVCxJQUFJLEVBQ0osT0FBTyxFQUNSLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV0QyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLGVBQWUsRUFBRTtJQUNuRCxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLGFBQWEsRUFBRTtJQUMzQyxVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQztTQUM3QixPQUFPLEVBQUU7U0FDVCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUMxRCxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMzQixXQUFXLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUMzQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNoQixTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUM3QixXQUFXLEVBQUUsU0FBUyxDQUFDLGVBQWUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUN6RCxPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMxQixRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUNwQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUUxQywwQkFBMEI7SUFDMUIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQ3pELFdBQVcsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsc0JBQXNCO0lBQ3pELFVBQVUsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsc0JBQXNCO0lBQ3ZELFdBQVcsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsMkJBQTJCO0lBQzlELGVBQWUsRUFBRSxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBRXJFLFNBQVMsRUFBRSxTQUFTLENBQUMsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFO0lBQzNFLFNBQVMsRUFBRSxTQUFTLENBQUMsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFO0NBQzVFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgcGdUYWJsZSxcclxuICB1dWlkLFxyXG4gIHRleHQsXHJcbiAgdGltZXN0YW1wLFxyXG4gIGpzb24sXHJcbiAgYm9vbGVhblxyXG59IGZyb20gJ2RyaXp6bGUtb3JtL3BnLWNvcmUnO1xyXG5pbXBvcnQgeyBhdXRoVXNlcnMgfSBmcm9tICcuL2F1dGguanMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJQcm9maWxlcyA9IHBnVGFibGUoJ3VzZXJfcHJvZmlsZXMnLCB7XHJcbiAgaWQ6IHV1aWQoJ2lkJykucHJpbWFyeUtleSgpLmRlZmF1bHRSYW5kb20oKSxcclxuICBhdXRoVXNlcklkOiB1dWlkKCdhdXRoX3VzZXJfaWQnKVxyXG4gICAgLm5vdE51bGwoKVxyXG4gICAgLnJlZmVyZW5jZXMoKCkgPT4gYXV0aFVzZXJzLmlkLCB7IG9uRGVsZXRlOiAnY2FzY2FkZScgfSksXHJcbiAgZmlyc3ROYW1lOiB0ZXh0KCdmaXJzdF9uYW1lJyksXHJcbiAgbGFzdE5hbWU6IHRleHQoJ2xhc3RfbmFtZScpLFxyXG4gIGRpc3BsYXlOYW1lOiB0ZXh0KCdkaXNwbGF5X25hbWUnKS5ub3ROdWxsKCksXHJcbiAgYmlvOiB0ZXh0KCdiaW8nKSxcclxuICBhdmF0YXJVcmw6IHRleHQoJ2F2YXRhcl91cmwnKSxcclxuICBkYXRlT2ZCaXJ0aDogdGltZXN0YW1wKCdkYXRlX29mX2JpcnRoJywgeyBtb2RlOiAnZGF0ZScgfSksXHJcbiAgY291bnRyeTogdGV4dCgnY291bnRyeScpLFxyXG4gIHRpbWV6b25lOiB0ZXh0KCd0aW1lem9uZScpLFxyXG4gIGxhbmd1YWdlOiB0ZXh0KCdsYW5ndWFnZScpLm5vdE51bGwoKSxcclxuICBwcmVmZXJlbmNlczoganNvbigncHJlZmVyZW5jZXMnKS5ub3ROdWxsKCksXHJcbiAgXHJcbiAgLy8gQ3JlYXRvci1zcGVjaWZpYyBmaWVsZHNcclxuICBpc0NyZWF0b3I6IGJvb2xlYW4oJ2lzX2NyZWF0b3InKS5ub3ROdWxsKCkuZGVmYXVsdChmYWxzZSksXHJcbiAgY3JlYXRvck5hbWU6IHRleHQoJ2NyZWF0b3JfbmFtZScpLCAvLyBQdWJsaWMgY3JlYXRvciBuYW1lXHJcbiAgY3JlYXRvckJpbzogdGV4dCgnY3JlYXRvcl9iaW8nKSwgLy8gQ3JlYXRvciBkZXNjcmlwdGlvblxyXG4gIHNvY2lhbExpbmtzOiBqc29uKCdzb2NpYWxfbGlua3MnKSwgLy8gVHdpdHRlciwgSW5zdGFncmFtLCBldGMuXHJcbiAgY3JlYXRvclZlcmlmaWVkOiBib29sZWFuKCdjcmVhdG9yX3ZlcmlmaWVkJykubm90TnVsbCgpLmRlZmF1bHQoZmFsc2UpLFxyXG4gIFxyXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKCdjcmVhdGVkX2F0JywgeyBtb2RlOiAnZGF0ZScgfSkubm90TnVsbCgpLmRlZmF1bHROb3coKSxcclxuICB1cGRhdGVkQXQ6IHRpbWVzdGFtcCgndXBkYXRlZF9hdCcsIHsgbW9kZTogJ2RhdGUnIH0pLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXHJcbn0pO1xyXG5cclxuZXhwb3J0IHR5cGUgSW5zZXJ0VXNlclByb2ZpbGUgPSB0eXBlb2YgdXNlclByb2ZpbGVzLiRpbmZlckluc2VydDtcclxuZXhwb3J0IHR5cGUgU2VsZWN0VXNlclByb2ZpbGUgPSB0eXBlb2YgdXNlclByb2ZpbGVzLiRpbmZlclNlbGVjdDsiXX0=