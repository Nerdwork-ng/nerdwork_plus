import { boolean, pgTable, text, timestamp, uuid, integer, } from "drizzle-orm/pg-core";
export const authUsers = pgTable("auth_users", {
    id: uuid("id").primaryKey().defaultRandom(),
    email: text("email").notNull().unique(),
    username: text("username").notNull().unique(),
    passwordHash: text("password_hash").notNull(),
    emailVerified: boolean("email_verified").notNull().default(false),
    twoFactorEnabled: boolean("two_factor_enabled").notNull().default(false),
    lastLoginAt: timestamp("last_login_at", { mode: "date" }),
    loginAttempts: integer("login_attempts").notNull().default(0),
    lockedUntil: timestamp("locked_until", { mode: "date" }),
    isActive: boolean("is_active").notNull().default(true),
    createdAt: timestamp("created_at", { mode: "date" }).notNull().defaultNow(),
    updatedAt: timestamp("updated_at", { mode: "date" }).notNull().defaultNow(),
});
export const authSessions = pgTable("auth_sessions", {
    id: uuid("id").primaryKey().defaultRandom(),
    userId: uuid("user_id")
        .notNull()
        .references(() => authUsers.id, { onDelete: "cascade" }),
    sessionToken: text("session_token").notNull().unique(),
    refreshToken: text("refresh_token").notNull().unique(),
    ipAddress: text("ip_address").notNull(),
    userAgent: text("user_agent").notNull(),
    expiresAt: timestamp("expires_at", { mode: "date" }).notNull(),
    createdAt: timestamp("created_at", { mode: "date" }).notNull().defaultNow(),
});
export const passwordResets = pgTable("password_resets", {
    id: uuid("id").primaryKey().defaultRandom(),
    userId: uuid("user_id")
        .notNull()
        .references(() => authUsers.id, { onDelete: "cascade" }),
    token: text("token").notNull().unique(),
    expiresAt: timestamp("expires_at", { mode: "date" }).notNull(),
    used: boolean("used").notNull().default(false),
    createdAt: timestamp("created_at", { mode: "date" }).notNull().defaultNow(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImF1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxPQUFPLEVBQ1AsSUFBSSxFQUNKLFNBQVMsRUFDVCxJQUFJLEVBQ0osT0FBTyxHQUNSLE1BQU0scUJBQXFCLENBQUM7QUFFN0IsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxZQUFZLEVBQUU7SUFDN0MsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUU7SUFDM0MsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDdkMsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDN0MsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDN0MsYUFBYSxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDakUsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUN4RSxXQUFXLEVBQUUsU0FBUyxDQUFDLGVBQWUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUN6RCxhQUFhLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM3RCxXQUFXLEVBQUUsU0FBUyxDQUFDLGNBQWMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUN4RCxRQUFRLEVBQUUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDdEQsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDM0UsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7Q0FDNUUsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxlQUFlLEVBQUU7SUFDbkQsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUU7SUFDM0MsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7U0FDcEIsT0FBTyxFQUFFO1NBQ1QsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDMUQsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDdEQsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDdEQsU0FBUyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDdkMsU0FBUyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDdkMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDOUQsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7Q0FDNUUsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTtJQUN2RCxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLGFBQWEsRUFBRTtJQUMzQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUNwQixPQUFPLEVBQUU7U0FDVCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUMxRCxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLE1BQU0sRUFBRTtJQUN2QyxTQUFTLEVBQUUsU0FBUyxDQUFDLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUM5RCxJQUFJLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7SUFDOUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7Q0FDNUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYm9vbGVhbixcbiAgcGdUYWJsZSxcbiAgdGV4dCxcbiAgdGltZXN0YW1wLFxuICB1dWlkLFxuICBpbnRlZ2VyLFxufSBmcm9tIFwiZHJpenpsZS1vcm0vcGctY29yZVwiO1xuXG5leHBvcnQgY29uc3QgYXV0aFVzZXJzID0gcGdUYWJsZShcImF1dGhfdXNlcnNcIiwge1xuICBpZDogdXVpZChcImlkXCIpLnByaW1hcnlLZXkoKS5kZWZhdWx0UmFuZG9tKCksXG4gIGVtYWlsOiB0ZXh0KFwiZW1haWxcIikubm90TnVsbCgpLnVuaXF1ZSgpLFxuICB1c2VybmFtZTogdGV4dChcInVzZXJuYW1lXCIpLm5vdE51bGwoKS51bmlxdWUoKSxcbiAgcGFzc3dvcmRIYXNoOiB0ZXh0KFwicGFzc3dvcmRfaGFzaFwiKS5ub3ROdWxsKCksXG4gIGVtYWlsVmVyaWZpZWQ6IGJvb2xlYW4oXCJlbWFpbF92ZXJpZmllZFwiKS5ub3ROdWxsKCkuZGVmYXVsdChmYWxzZSksXG4gIHR3b0ZhY3RvckVuYWJsZWQ6IGJvb2xlYW4oXCJ0d29fZmFjdG9yX2VuYWJsZWRcIikubm90TnVsbCgpLmRlZmF1bHQoZmFsc2UpLFxuICBsYXN0TG9naW5BdDogdGltZXN0YW1wKFwibGFzdF9sb2dpbl9hdFwiLCB7IG1vZGU6IFwiZGF0ZVwiIH0pLFxuICBsb2dpbkF0dGVtcHRzOiBpbnRlZ2VyKFwibG9naW5fYXR0ZW1wdHNcIikubm90TnVsbCgpLmRlZmF1bHQoMCksXG4gIGxvY2tlZFVudGlsOiB0aW1lc3RhbXAoXCJsb2NrZWRfdW50aWxcIiwgeyBtb2RlOiBcImRhdGVcIiB9KSxcbiAgaXNBY3RpdmU6IGJvb2xlYW4oXCJpc19hY3RpdmVcIikubm90TnVsbCgpLmRlZmF1bHQodHJ1ZSksXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKFwiY3JlYXRlZF9hdFwiLCB7IG1vZGU6IFwiZGF0ZVwiIH0pLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXG4gIHVwZGF0ZWRBdDogdGltZXN0YW1wKFwidXBkYXRlZF9hdFwiLCB7IG1vZGU6IFwiZGF0ZVwiIH0pLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXG59KTtcblxuZXhwb3J0IGNvbnN0IGF1dGhTZXNzaW9ucyA9IHBnVGFibGUoXCJhdXRoX3Nlc3Npb25zXCIsIHtcbiAgaWQ6IHV1aWQoXCJpZFwiKS5wcmltYXJ5S2V5KCkuZGVmYXVsdFJhbmRvbSgpLFxuICB1c2VySWQ6IHV1aWQoXCJ1c2VyX2lkXCIpXG4gICAgLm5vdE51bGwoKVxuICAgIC5yZWZlcmVuY2VzKCgpID0+IGF1dGhVc2Vycy5pZCwgeyBvbkRlbGV0ZTogXCJjYXNjYWRlXCIgfSksXG4gIHNlc3Npb25Ub2tlbjogdGV4dChcInNlc3Npb25fdG9rZW5cIikubm90TnVsbCgpLnVuaXF1ZSgpLFxuICByZWZyZXNoVG9rZW46IHRleHQoXCJyZWZyZXNoX3Rva2VuXCIpLm5vdE51bGwoKS51bmlxdWUoKSxcbiAgaXBBZGRyZXNzOiB0ZXh0KFwiaXBfYWRkcmVzc1wiKS5ub3ROdWxsKCksXG4gIHVzZXJBZ2VudDogdGV4dChcInVzZXJfYWdlbnRcIikubm90TnVsbCgpLFxuICBleHBpcmVzQXQ6IHRpbWVzdGFtcChcImV4cGlyZXNfYXRcIiwgeyBtb2RlOiBcImRhdGVcIiB9KS5ub3ROdWxsKCksXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKFwiY3JlYXRlZF9hdFwiLCB7IG1vZGU6IFwiZGF0ZVwiIH0pLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXG59KTtcblxuZXhwb3J0IGNvbnN0IHBhc3N3b3JkUmVzZXRzID0gcGdUYWJsZShcInBhc3N3b3JkX3Jlc2V0c1wiLCB7XG4gIGlkOiB1dWlkKFwiaWRcIikucHJpbWFyeUtleSgpLmRlZmF1bHRSYW5kb20oKSxcbiAgdXNlcklkOiB1dWlkKFwidXNlcl9pZFwiKVxuICAgIC5ub3ROdWxsKClcbiAgICAucmVmZXJlbmNlcygoKSA9PiBhdXRoVXNlcnMuaWQsIHsgb25EZWxldGU6IFwiY2FzY2FkZVwiIH0pLFxuICB0b2tlbjogdGV4dChcInRva2VuXCIpLm5vdE51bGwoKS51bmlxdWUoKSxcbiAgZXhwaXJlc0F0OiB0aW1lc3RhbXAoXCJleHBpcmVzX2F0XCIsIHsgbW9kZTogXCJkYXRlXCIgfSkubm90TnVsbCgpLFxuICB1c2VkOiBib29sZWFuKFwidXNlZFwiKS5ub3ROdWxsKCkuZGVmYXVsdChmYWxzZSksXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKFwiY3JlYXRlZF9hdFwiLCB7IG1vZGU6IFwiZGF0ZVwiIH0pLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXG59KTtcblxuZXhwb3J0IHR5cGUgSW5zZXJ0QXV0aFVzZXIgPSB0eXBlb2YgYXV0aFVzZXJzLiRpbmZlckluc2VydDtcbmV4cG9ydCB0eXBlIFNlbGVjdEF1dGhVc2VyID0gdHlwZW9mIGF1dGhVc2Vycy4kaW5mZXJTZWxlY3Q7XG5cbmV4cG9ydCB0eXBlIEluc2VydEF1dGhTZXNzaW9uID0gdHlwZW9mIGF1dGhTZXNzaW9ucy4kaW5mZXJJbnNlcnQ7XG5leHBvcnQgdHlwZSBTZWxlY3RBdXRoU2Vzc2lvbiA9IHR5cGVvZiBhdXRoU2Vzc2lvbnMuJGluZmVyU2VsZWN0O1xuXG5leHBvcnQgdHlwZSBJbnNlcnRQYXNzd29yZFJlc2V0ID0gdHlwZW9mIHBhc3N3b3JkUmVzZXRzLiRpbmZlckluc2VydDtcbmV4cG9ydCB0eXBlIFNlbGVjdFBhc3N3b3JkUmVzZXQgPSB0eXBlb2YgcGFzc3dvcmRSZXNldHMuJGluZmVyU2VsZWN0OyJdfQ==