import { pgTable, uuid, text, timestamp, integer, boolean, json } from 'drizzle-orm/pg-core';
// Import auth users from shared model (assuming it exists)
// For now, we'll create a local reference
export const authUsers = pgTable('auth_users', {
    id: uuid('id').primaryKey(),
});
export const files = pgTable('files', {
    id: uuid('id').primaryKey().defaultRandom(),
    userId: uuid('user_id')
        .references(() => authUsers.id, { onDelete: 'cascade' }),
    filename: text('filename').notNull(),
    originalName: text('original_name').notNull(),
    mimetype: text('mimetype').notNull(),
    size: integer('size').notNull(),
    // AWS S3 storage
    s3Key: text('s3_key'),
    s3Bucket: text('s3_bucket'),
    s3Url: text('s3_url'),
    cdnUrl: text('cdn_url'),
    // IPFS storage (optional)
    ipfsHash: text('ipfs_hash'),
    ipfsUrl: text('ipfs_url'),
    isPinnedToIPFS: boolean('is_pinned_to_ipfs').default(false),
    // File classification
    category: text('category').notNull(), // 'comic-page', 'comic-cover', 'avatar', 'nft-asset', etc.
    purpose: text('purpose').notNull(), // 'storage', 'nft-minting', 'public', 'private'
    // Associated references
    comicId: uuid('comic_id'), // Reference to comic if this is a comic asset
    referenceId: text('reference_id'), // Generic reference for other entities
    referenceType: text('reference_type'), // Type of entity this file belongs to
    // File status and access
    isPublic: boolean('is_public').notNull().default(false),
    isActive: boolean('is_active').notNull().default(true),
    // Metadata
    metadata: json('metadata'), // Additional file metadata, EXIF data, etc.
    uploadSource: text('upload_source').notNull().default('web'), // 'web', 'mobile', 'admin'
    createdAt: timestamp('created_at', { mode: 'date' }).notNull().defaultNow(),
    updatedAt: timestamp('updated_at', { mode: 'date' }).notNull().defaultNow(),
});
export const fileProcessingJobs = pgTable('file_processing_jobs', {
    id: uuid('id').primaryKey().defaultRandom(),
    fileId: uuid('file_id')
        .notNull()
        .references(() => files.id, { onDelete: 'cascade' }),
    jobType: text('job_type').notNull(), // 'thumbnail', 'compression', 'ipfs-pin', 'virus-scan'
    status: text('status').notNull().default('pending'), // 'pending', 'processing', 'completed', 'failed'
    processingData: json('processing_data'), // Job-specific data
    resultData: json('result_data'), // Job result data
    errorMessage: text('error_message'),
    startedAt: timestamp('started_at', { mode: 'date' }),
    completedAt: timestamp('completed_at', { mode: 'date' }),
    createdAt: timestamp('created_at', { mode: 'date' }).notNull().defaultNow(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLE9BQU8sRUFDUCxJQUFJLEVBQ0osSUFBSSxFQUNKLFNBQVMsRUFDVCxPQUFPLEVBQ1AsT0FBTyxFQUNQLElBQUksRUFDTCxNQUFNLHFCQUFxQixDQUFDO0FBRTdCLDJEQUEyRDtBQUMzRCwwQ0FBMEM7QUFDMUMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxZQUFZLEVBQUU7SUFDN0MsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUU7Q0FDNUIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLEVBQUU7SUFDcEMsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUU7SUFDM0MsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7U0FDcEIsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDMUQsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDcEMsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDN0MsUUFBUSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDcEMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFFL0IsaUJBQWlCO0lBQ2pCLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3JCLFFBQVEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzNCLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3JC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b3J0IHtcclxuICBwZ1RhYmxlLFxyXG4gIHV1aWQsXHJcbiAgdGV4dCxcclxuICB0aW1lc3RhbXAsXHJcbiAgaW50ZWdlcixcclxuICBib29sZWFuLFxyXG4gIGpzb25cclxufSBmcm9tICdkcml6emxlLW9ybS9wZy1jb3JlJztcclxuXHJcbi8vIEltcG9ydCBhdXRoIHVzZXJzIGZyb20gc2hhcmVkIG1vZGVsIChhc3N1bWluZyBpdCBleGlzdHMpXHJcbi8vIEZvciBub3csIHdlJ2xsIGNyZWF0ZSBhIGxvY2FsIHJlZmVyZW5jZVxyXG5leHBvcnQgY29uc3QgYXV0aFVzZXJzID0gcGdUYWJsZSgnYXV0aF91c2VycycsIHtcclxuICBpZDogdXVpZCgnaWQnKS5wcmltYXJ5S2V5KCksXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbGVzID0gcGdUYWJsZSgnZmlsZXMnLCB7XHJcbiAgaWQ6IHV1aWQoJ2lkJykucHJpbWFyeUtleSgpLmRlZmF1bHRSYW5kb20oKSxcclxuICB1c2VySWQ6IHV1aWQoJ3VzZXJfaWQnKVxyXG4gICAgLnJlZmVyZW5jZXMoKCkgPT4gYXV0aFVzZXJzLmlkLCB7IG9uRGVsZXRlOiAnY2FzY2FkZScgfSksXHJcbiAgZmlsZW5hbWU6IHRleHQoJ2ZpbGVuYW1lJykubm90TnVsbCgpLFxyXG4gIG9yaWdpbmFsTmFtZTogdGV4dCgnb3JpZ2luYWxfbmFtZScpLm5vdE51bGwoKSxcclxuICBtaW1ldHlwZTogdGV4dCgnbWltZXR5cGUnKS5ub3ROdWxsKCksXHJcbiAgc2l6ZTogaW50ZWdlcignc2l6ZScpLm5vdE51bGwoKSxcclxuICBcclxuICAvLyBBV1MgUzMgc3RvcmFnZVxyXG4gIHMzS2V5OiB0ZXh0KCdzM19rZXknKSxcclxuICBzM0J1Y2tldDogdGV4dCgnczNfYnVja2V0JyksXHJcbiAgczNVcmw6IHRleHQoJ3MzX3VybCcpLFxyXG4gIGNkblVybDogdGV4dCgnY2RuX3VybCcpLFxyXG4gIFxyXG4gIC8vIElQRlMgc3RvcmFnZSAob3B0aW9uYWwpXHJcbiAgaXBmc0hhc2g6IHRleHQoJ2lwZnNfaGFzaCcpLFxyXG4gIGlwZnNVcmw6IHRleHQoJ2lwZnNfdXJsJyksXHJcbiAgaXNQaW5uZWRUb0lQRlM6IGJvb2xlYW4oJ2lzX3Bpbm5lZF90b19pcGZzJykuZGVmYXVsdChmYWxzZSksXHJcbiAgXHJcbiAgLy8gRmlsZSBjbGFzc2lmaWNhdGlvblxyXG4gIGNhdGVnb3J5OiB0ZXh0KCdjYXRlZ29yeScpLm5vdE51bGwoKSwgLy8gJ2NvbWljLXBhZ2UnLCAnY29taWMtY292ZXInLCAnYXZhdGFyJywgJ25mdC1hc3NldCcsIGV0Yy5cclxuICBwdXJwb3NlOiB0ZXh0KCdwdXJwb3NlJykubm90TnVsbCgpLCAvLyAnc3RvcmFnZScsICduZnQtbWludGluZycsICdwdWJsaWMnLCAncHJpdmF0ZSdcclxuICBcclxuICAvLyBBc3NvY2lhdGVkIHJlZmVyZW5jZXNcclxuICBjb21pY0lkOiB1dWlkKCdjb21pY19pZCcpLCAvLyBSZWZlcmVuY2UgdG8gY29taWMgaWYgdGhpcyBpcyBhIGNvbWljIGFzc2V0XHJcbiAgcmVmZXJlbmNlSWQ6IHRleHQoJ3JlZmVyZW5jZV9pZCcpLCAvLyBHZW5lcmljIHJlZmVyZW5jZSBmb3Igb3RoZXIgZW50aXRpZXNcclxuICByZWZlcmVuY2VUeXBlOiB0ZXh0KCdyZWZlcmVuY2VfdHlwZScpLCAvLyBUeXBlIG9mIGVudGl0eSB0aGlzIGZpbGUgYmVsb25ncyB0b1xyXG4gIFxyXG4gIC8vIEZpbGUgc3RhdHVzIGFuZCBhY2Nlc3NcclxuICBpc1B1YmxpYzogYm9vbGVhbignaXNfcHVibGljJykubm90TnVsbCgpLmRlZmF1bHQoZmFsc2UpLFxyXG4gIGlzQWN0aXZlOiBib29sZWFuKCdpc19hY3RpdmUnKS5ub3ROdWxsKCkuZGVmYXVsdCh0cnVlKSxcclxuICBcclxuICAvLyBNZXRhZGF0YVxyXG4gIG1ldGFkYXRhOiBqc29uKCdtZXRhZGF0YScpLCAvLyBBZGRpdGlvbmFsIGZpbGUgbWV0YWRhdGEsIEVYSUYgZGF0YSwgZXRjLlxyXG4gIHVwbG9hZFNvdXJjZTogdGV4dCgndXBsb2FkX3NvdXJjZScpLm5vdE51bGwoKS5kZWZhdWx0KCd3ZWInKSwgLy8gJ3dlYicsICdtb2JpbGUnLCAnYWRtaW4nXHJcbiAgXHJcbiAgY3JlYXRlZEF0OiB0aW1lc3RhbXAoJ2NyZWF0ZWRfYXQnLCB7IG1vZGU6ICdkYXRlJyB9KS5ub3ROdWxsKCkuZGVmYXVsdE5vdygpLFxyXG4gIHVwZGF0ZWRBdDogdGltZXN0YW1wKCd1cGRhdGVkX2F0JywgeyBtb2RlOiAnZGF0ZScgfSkubm90TnVsbCgpLmRlZmF1bHROb3coKSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgZmlsZVByb2Nlc3NpbmdKb2JzID0gcGdUYWJsZSgnZmlsZV9wcm9jZXNzaW5nX2pvYnMnLCB7XHJcbiAgaWQ6IHV1aWQoJ2lkJykucHJpbWFyeUtleSgpLmRlZmF1bHRSYW5kb20oKSxcclxuICBmaWxlSWQ6IHV1aWQoJ2ZpbGVfaWQnKVxyXG4gICAgLm5vdE51bGwoKVxyXG4gICAgLnJlZmVyZW5jZXMoKCkgPT4gZmlsZXMuaWQsIHsgb25EZWxldGU6ICdjYXNjYWRlJyB9KSxcclxuICBqb2JUeXBlOiB0ZXh0KCdqb2JfdHlwZScpLm5vdE51bGwoKSwgLy8gJ3RodW1ibmFpbCcsICdjb21wcmVzc2lvbicsICdpcGZzLXBpbicsICd2aXJ1cy1zY2FuJ1xyXG4gIHN0YXR1czogdGV4dCgnc3RhdHVzJykubm90TnVsbCgpLmRlZmF1bHQoJ3BlbmRpbmcnKSwgLy8gJ3BlbmRpbmcnLCAncHJvY2Vzc2luZycsICdjb21wbGV0ZWQnLCAnZmFpbGVkJ1xyXG4gIHByb2Nlc3NpbmdEYXRhOiBqc29uKCdwcm9jZXNzaW5nX2RhdGEnKSwgLy8gSm9iLXNwZWNpZmljIGRhdGFcclxuICByZXN1bHREYXRhOiBqc29uKCdyZXN1bHRfZGF0YScpLCAvLyBKb2IgcmVzdWx0IGRhdGFcclxuICBlcnJvck1lc3NhZ2U6IHRleHQoJ2Vycm9yX21lc3NhZ2UnKSxcclxuICBcclxuICBzdGFydGVkQXQ6IHRpbWVzdGFtcCgnc3RhcnRlZF9hdCcsIHsgbW9kZTogJ2RhdGUnIH0pLFxyXG4gIGNvbXBsZXRlZEF0OiB0aW1lc3RhbXAoJ2NvbXBsZXRlZF9hdCcsIHsgbW9kZTogJ2RhdGUnIH0pLFxyXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKCdjcmVhdGVkX2F0JywgeyBtb2RlOiAnZGF0ZScgfSkubm90TnVsbCgpLmRlZmF1bHROb3coKSxcclxufSk7XHJcblxyXG5leHBvcnQgdHlwZSBJbnNlcnRGaWxlID0gdHlwZW9mIGZpbGVzLiRpbmZlckluc2VydDtcclxuZXhwb3J0IHR5cGUgU2VsZWN0RmlsZSA9IHR5cGVvZiBmaWxlcy4kaW5mZXJTZWxlY3Q7XHJcblxyXG5leHBvcnQgdHlwZSBJbnNlcnRGaWxlUHJvY2Vzc2luZ0pvYiA9IHR5cGVvZiBmaWxlUHJvY2Vzc2luZ0pvYnMuJGluZmVySW5zZXJ0O1xyXG5leHBvcnQgdHlwZSBTZWxlY3RGaWxlUHJvY2Vzc2luZ0pvYiA9IHR5cGVvZiBmaWxlUHJvY2Vzc2luZ0pvYnMuJGluZmVyU2VsZWN0OyJdfQ==