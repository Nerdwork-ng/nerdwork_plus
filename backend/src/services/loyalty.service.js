import { eq } from "drizzle-orm";
import { db } from "../config/db";
import { loyaltyPoints } from "../model/schema";
export async function addLoyaltyPoints(userId, purchaseAmount) {
    // Example: earn 10 points per purchase, or you can use amount-based logic
    const pointsToAdd = Math.floor(purchaseAmount * 0.1); // ðŸŽ‰ 10% cashback as points
    const existing = await db
        .select()
        .from(loyaltyPoints)
        .where(eq(loyaltyPoints.userId, userId))
        .limit(1);
    if (existing.length > 0) {
        await db
            .update(loyaltyPoints)
            .set({
            points: existing[0].points + pointsToAdd,
            lastUpdated: new Date(),
        })
            .where(eq(loyaltyPoints.userId, userId));
    }
    else {
        await db.insert(loyaltyPoints).values({
            userId,
            points: pointsToAdd,
        });
    }
}
export async function getLoyaltyPoints(userId) {
    const record = await db
        .select()
        .from(loyaltyPoints)
        .where(eq(loyaltyPoints.userId, userId))
        .limit(1);
    return record.length > 0 ? record[0].points : 0;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG95YWx0eS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibG95YWx0eS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDakMsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNsQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFaEQsTUFBTSxDQUFDLEtBQUssVUFBVSxnQkFBZ0IsQ0FBQyxNQUFjLEVBQUUsY0FBc0I7SUFDM0UsMEVBQTBFO0lBQzFFLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsNEJBQTRCO0lBRWxGLE1BQU0sUUFBUSxHQUFHLE1BQU0sRUFBRTtTQUN0QixNQUFNLEVBQUU7U0FDUixJQUFJLENBQUMsYUFBYSxDQUFDO1NBQ25CLEtBQUssQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztTQUN2QyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFWixJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7UUFDeEIsTUFBTSxFQUFFO2FBQ0wsTUFBTSxDQUFDLGFBQWEsQ0FBQzthQUNyQixHQUFHLENBQUM7WUFDSCxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxXQUFXO1lBQ3hDLFdBQVcsRUFBRSxJQUFJLElBQUksRUFBRTtTQUN4QixDQUFDO2FBQ0QsS0FBSyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDN0MsQ0FBQztTQUFNLENBQUM7UUFDTixNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQ3BDLE1BQU07WUFDTixNQUFNLEVBQUUsV0FBVztTQUNwQixDQUFDLENBQUM7SUFDTCxDQUFDO0FBQ0gsQ0FBQztBQUVELE1BQU0sQ0FBQyxLQUFLLFVBQVUsZ0JBQWdCLENBQUMsTUFBYztJQUNuRCxNQUFNLE1BQU0sR0FBRyxNQUFNLEVBQUU7U0FDcEIsTUFBTSxFQUFFO1NBQ1IsSUFBSSxDQUFDLGFBQWEsQ0FBQztTQUNuQixLQUFLLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDdkMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRVosT0FBTyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlcSB9IGZyb20gXCJkcml6emxlLW9ybVwiO1xyXG5pbXBvcnQgeyBkYiB9IGZyb20gXCIuLi9jb25maWcvZGJcIjtcclxuaW1wb3J0IHsgbG95YWx0eVBvaW50cyB9IGZyb20gXCIuLi9tb2RlbC9zY2hlbWFcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRMb3lhbHR5UG9pbnRzKHVzZXJJZDogc3RyaW5nLCBwdXJjaGFzZUFtb3VudDogbnVtYmVyKSB7XHJcbiAgLy8gRXhhbXBsZTogZWFybiAxMCBwb2ludHMgcGVyIHB1cmNoYXNlLCBvciB5b3UgY2FuIHVzZSBhbW91bnQtYmFzZWQgbG9naWNcclxuICBjb25zdCBwb2ludHNUb0FkZCA9IE1hdGguZmxvb3IocHVyY2hhc2VBbW91bnQgKiAwLjEpOyAvLyDwn46JIDEwJSBjYXNoYmFjayBhcyBwb2ludHNcclxuXHJcbiAgY29uc3QgZXhpc3RpbmcgPSBhd2FpdCBkYlxyXG4gICAgLnNlbGVjdCgpXHJcbiAgICAuZnJvbShsb3lhbHR5UG9pbnRzKVxyXG4gICAgLndoZXJlKGVxKGxveWFsdHlQb2ludHMudXNlcklkLCB1c2VySWQpKVxyXG4gICAgLmxpbWl0KDEpO1xyXG5cclxuICBpZiAoZXhpc3RpbmcubGVuZ3RoID4gMCkge1xyXG4gICAgYXdhaXQgZGJcclxuICAgICAgLnVwZGF0ZShsb3lhbHR5UG9pbnRzKVxyXG4gICAgICAuc2V0KHtcclxuICAgICAgICBwb2ludHM6IGV4aXN0aW5nWzBdLnBvaW50cyArIHBvaW50c1RvQWRkLFxyXG4gICAgICAgIGxhc3RVcGRhdGVkOiBuZXcgRGF0ZSgpLFxyXG4gICAgICB9KVxyXG4gICAgICAud2hlcmUoZXEobG95YWx0eVBvaW50cy51c2VySWQsIHVzZXJJZCkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhd2FpdCBkYi5pbnNlcnQobG95YWx0eVBvaW50cykudmFsdWVzKHtcclxuICAgICAgdXNlcklkLFxyXG4gICAgICBwb2ludHM6IHBvaW50c1RvQWRkLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TG95YWx0eVBvaW50cyh1c2VySWQ6IHN0cmluZykge1xyXG4gIGNvbnN0IHJlY29yZCA9IGF3YWl0IGRiXHJcbiAgICAuc2VsZWN0KClcclxuICAgIC5mcm9tKGxveWFsdHlQb2ludHMpXHJcbiAgICAud2hlcmUoZXEobG95YWx0eVBvaW50cy51c2VySWQsIHVzZXJJZCkpXHJcbiAgICAubGltaXQoMSk7XHJcblxyXG4gIHJldHVybiByZWNvcmQubGVuZ3RoID4gMCA/IHJlY29yZFswXS5wb2ludHMgOiAwO1xyXG59XHJcbiJdfQ==