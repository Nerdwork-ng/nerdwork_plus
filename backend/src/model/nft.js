import { pgTable, uuid, text, timestamp, boolean, integer, json } from 'drizzle-orm/pg-core';
import { userWallets } from './wallet';
export const nftTransactions = pgTable('nwt_transactions', {
    id: uuid('id').primaryKey().defaultRandom(),
    userWalletId: uuid('user_wallet_id')
        .notNull()
        .references(() => userWallets.id, { onDelete: 'cascade' }),
    transactionType: text('transaction_type').notNull(), // 'credit' | 'debit'
    category: text('category').notNull(), // 'purchase', 'sale', etc.
    amount: text('amount').notNull(),
    balanceBefore: text('balance_before').notNull(),
    balanceAfter: text('balance_after').notNull(),
    referenceId: text('reference_id'),
    referenceType: text('reference_type'),
    description: text('description').notNull(),
    metadata: json('metadata'),
    blockchainTxHash: text('blockchain_tx_hash'),
    status: text('status').notNull(), // 'pending', 'completed', etc.
    processedAt: timestamp('processed_at', { mode: 'date' }),
    createdAt: timestamp('created_at', { mode: 'date' }).notNull().defaultNow(),
});
export const nft = pgTable('nwt_transactions', {
    id: uuid('id').primaryKey().defaultRandom(),
    owner: uuid('user_wallet_id')
        .notNull()
        .references(() => userWallets.id, { onDelete: 'cascade' }),
    colection: text('collection'), // 'credit' | 'debit'
    price: integer('price').default(0), // 'purchase', 'sale', etc.
    isLimitedEdition: boolean('is_limited_edition').default(false),
    amount: integer("amount"),
    metadata: json('metadata'),
    status: text('status').notNull(), // 'pending', 'completed', etc.
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmZ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmZ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxPQUFPLEVBQ1AsSUFBSSxFQUNKLElBQUksRUFDSixTQUFTLEVBQ1QsT0FBTyxFQUNQLE9BQU8sRUFDUCxJQUFJLEVBQ0wsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBSXZDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsa0JBQWtCLEVBQUU7SUFDekQsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUU7SUFDM0MsWUFBWSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztTQUNqQyxPQUFPLEVBQUU7U0FDVCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUM1RCxlQUFlLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUscUJBQXFCO0lBQzFFLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsMkJBQTJCO0lBQ2pFLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxFQUFFO0lBQ2hDLGFBQWEsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDL0MsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLEVBQUU7SUFDN0MsV0FBVyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDakMsYUFBYSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztJQUNyQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLE9BQU8sRUFBRTtJQUMxQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMxQixnQkFBZ0IsRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUM7SUFDNUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSwrQkFBK0I7SUFDakUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxjQUFjLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7SUFDeEQsU0FBUyxFQUFFLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7Q0FDNUUsQ0FBQyxDQUFDO0FBSUgsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRTtJQUM3QyxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLGFBQWEsRUFBRTtJQUMzQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1NBQzFCLE9BQU8sRUFBRTtTQUNULFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxDQUFDO0lBQzVELFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUscUJBQXFCO0lBQ3BELEtBQUssRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLDJCQUEyQjtJQUMvRCxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzlELE1BQU0sRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDO0lBQ3pCLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzFCLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsK0JBQStCO0NBQ2xFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgcGdUYWJsZSxcclxuICB1dWlkLFxyXG4gIHRleHQsXHJcbiAgdGltZXN0YW1wLFxyXG4gIGJvb2xlYW4sXHJcbiAgaW50ZWdlcixcclxuICBqc29uXHJcbn0gZnJvbSAnZHJpenpsZS1vcm0vcGctY29yZSc7XHJcbmltcG9ydCB7IHVzZXJXYWxsZXRzIH0gZnJvbSAnLi93YWxsZXQnO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY29uc3QgbmZ0VHJhbnNhY3Rpb25zID0gcGdUYWJsZSgnbnd0X3RyYW5zYWN0aW9ucycsIHtcclxuICBpZDogdXVpZCgnaWQnKS5wcmltYXJ5S2V5KCkuZGVmYXVsdFJhbmRvbSgpLFxyXG4gIHVzZXJXYWxsZXRJZDogdXVpZCgndXNlcl93YWxsZXRfaWQnKVxyXG4gICAgLm5vdE51bGwoKVxyXG4gICAgLnJlZmVyZW5jZXMoKCkgPT4gdXNlcldhbGxldHMuaWQsIHsgb25EZWxldGU6ICdjYXNjYWRlJyB9KSxcclxuICB0cmFuc2FjdGlvblR5cGU6IHRleHQoJ3RyYW5zYWN0aW9uX3R5cGUnKS5ub3ROdWxsKCksIC8vICdjcmVkaXQnIHwgJ2RlYml0J1xyXG4gIGNhdGVnb3J5OiB0ZXh0KCdjYXRlZ29yeScpLm5vdE51bGwoKSwgLy8gJ3B1cmNoYXNlJywgJ3NhbGUnLCBldGMuXHJcbiAgYW1vdW50OiB0ZXh0KCdhbW91bnQnKS5ub3ROdWxsKCksXHJcbiAgYmFsYW5jZUJlZm9yZTogdGV4dCgnYmFsYW5jZV9iZWZvcmUnKS5ub3ROdWxsKCksXHJcbiAgYmFsYW5jZUFmdGVyOiB0ZXh0KCdiYWxhbmNlX2FmdGVyJykubm90TnVsbCgpLFxyXG4gIHJlZmVyZW5jZUlkOiB0ZXh0KCdyZWZlcmVuY2VfaWQnKSxcclxuICByZWZlcmVuY2VUeXBlOiB0ZXh0KCdyZWZlcmVuY2VfdHlwZScpLFxyXG4gIGRlc2NyaXB0aW9uOiB0ZXh0KCdkZXNjcmlwdGlvbicpLm5vdE51bGwoKSxcclxuICBtZXRhZGF0YToganNvbignbWV0YWRhdGEnKSxcclxuICBibG9ja2NoYWluVHhIYXNoOiB0ZXh0KCdibG9ja2NoYWluX3R4X2hhc2gnKSxcclxuICBzdGF0dXM6IHRleHQoJ3N0YXR1cycpLm5vdE51bGwoKSwgLy8gJ3BlbmRpbmcnLCAnY29tcGxldGVkJywgZXRjLlxyXG4gIHByb2Nlc3NlZEF0OiB0aW1lc3RhbXAoJ3Byb2Nlc3NlZF9hdCcsIHsgbW9kZTogJ2RhdGUnIH0pLFxyXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKCdjcmVhdGVkX2F0JywgeyBtb2RlOiAnZGF0ZScgfSkubm90TnVsbCgpLmRlZmF1bHROb3coKSxcclxufSk7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBuZnQgPSBwZ1RhYmxlKCdud3RfdHJhbnNhY3Rpb25zJywge1xyXG4gIGlkOiB1dWlkKCdpZCcpLnByaW1hcnlLZXkoKS5kZWZhdWx0UmFuZG9tKCksXHJcbiAgb3duZXI6IHV1aWQoJ3VzZXJfd2FsbGV0X2lkJylcclxuICAgIC5ub3ROdWxsKClcclxuICAgIC5yZWZlcmVuY2VzKCgpID0+IHVzZXJXYWxsZXRzLmlkLCB7IG9uRGVsZXRlOiAnY2FzY2FkZScgfSksXHJcbiAgY29sZWN0aW9uOiB0ZXh0KCdjb2xsZWN0aW9uJyksIC8vICdjcmVkaXQnIHwgJ2RlYml0J1xyXG4gIHByaWNlOiBpbnRlZ2VyKCdwcmljZScpLmRlZmF1bHQoMCksIC8vICdwdXJjaGFzZScsICdzYWxlJywgZXRjLlxyXG4gIGlzTGltaXRlZEVkaXRpb246IGJvb2xlYW4oJ2lzX2xpbWl0ZWRfZWRpdGlvbicpLmRlZmF1bHQoZmFsc2UpLFxyXG4gIGFtb3VudDogaW50ZWdlcihcImFtb3VudFwiKSxcclxuICBtZXRhZGF0YToganNvbignbWV0YWRhdGEnKSxcclxuICBzdGF0dXM6IHRleHQoJ3N0YXR1cycpLm5vdE51bGwoKSwgLy8gJ3BlbmRpbmcnLCAnY29tcGxldGVkJywgZXRjLlxyXG59KTtcclxuXHJcblxyXG4iXX0=