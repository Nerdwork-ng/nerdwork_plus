version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - COMIC_SERVICE_URL=http://comic-service:3003
      - WALLET_SERVICE_URL=http://wallet-service:3004
      - EVENT_SERVICE_URL=http://event-service:3005
      - LEDGER_SERVICE_URL=http://ledger-service:3006
      - FILE_SERVICE_URL=http://file-service:3007
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - auth-service
      - user-service
      - comic-service
      - wallet-service
      - event-service
      - ledger-service
      - file-service
    networks:
      - microservices-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3001
    networks:
      - microservices-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3002
    networks:
      - microservices-network

  # Comic Service
  comic-service:
    build:
      context: ./services/comic-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3003
    networks:
      - microservices-network

  # Wallet Service
  wallet-service:
    build:
      context: ./services/wallet-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - HELIO_API_KEY=${HELIO_API_KEY}
      - HELIO_RECEIVER_WALLET=${HELIO_RECEIVER_WALLET}
      - PORT=3004
    networks:
      - microservices-network

  # File Service
  file-service:
    build:
      context: ./services/file-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
      - PINATA_API_KEY=${PINATA_API_KEY}
      - PINATA_SECRET_API_KEY=${PINATA_SECRET_API_KEY}
      - PORT=3007
    networks:
      - microservices-network

  # Event Service
  event-service:
    build:
      context: ./services/event-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3005
    networks:
      - microservices-network

  # Ledger Service
  ledger-service:
    build:
      context: ./services/ledger-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3006
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge