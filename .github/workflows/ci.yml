name: CI - Lint, Test, and Build

permissions:
  contents: write
  issues: write
  security-events: write  # For SARIF upload

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: [main]  # Run on PRs to main

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      changed-packages: ${{ steps.changes.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for diff
      - name: Detect changed packages
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_REF="${{ github.base_ref }}"
            DIFF_CMD="git diff --name-only origin/$BASE_REF...HEAD"
          else
            DIFF_CMD="git diff --name-only HEAD^ HEAD"
          fi
          # Fallback for initial commit
          CHANGED=$($DIFF_CMD 2>/dev/null | grep -E '^(apps/|services/)' | cut -d'/' -f1,2 | sort -u | tr '\n' ' ')
          if [ -z "$CHANGED" ]; then
            CHANGED="all"
          fi
          echo "packages=$CHANGED" >> $GITHUB_OUTPUT
          echo "Detected changed packages: $CHANGED"

  lint-test-build:
    runs-on: ubuntu-latest
    needs: changed-files
    strategy:
      matrix:
        package:
          - { name: 'apps/web/nerdwork-plus', type: 'frontend' }  # Frontend
          - { name: 'backend/services/auth', type: 'backend' }
          - { name: 'backend/services/user', type: 'backend' }
          - { name: 'backend/services/comic', type: 'backend' }
          - { name: 'backend/services/file', type: 'backend' }
          - { name: 'backend/services/wallet', type: 'backend' }
          - { name: 'backend/services/payment', type: 'backend' }
          - { name: 'backend/services/loyalty', type: 'backend' }
          - { name: 'backend/services/nft', type: 'backend' }
          - { name: 'backend/services/notification', type: 'backend' }
          - { name: 'backend/services/analytics', type: 'backend' }
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          cache: 'pnpm'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run tasks with turbo
        if: needs.changed-files.outputs.changed-packages == 'all' || contains(needs.changed-files.outputs.changed-packages, matrix.package.name)
        working-directory: ${{ matrix.package.name }}
        run: |
          pnpm turbo run lint test build --filter=./...  # Runs only for changed packages
      - name: Upload test coverage
        if: always() && (needs.changed-files.outputs.changed-packages == 'all' || contains(needs.changed-files.outputs.changed-packages, matrix.package.name))
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.package.name }}/coverage/lcov.info  # Adjust per package
          fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-test-build
    if: always() && needs.lint-test-build.result == 'success'
    strategy:
      matrix:
        package:
          - { name: 'apps/web/nerdwork-plus', type: 'frontend' }
          - { name: 'backend/services/auth', type: 'backend' }
          - { name: 'backend/services/user', type: 'backend' }
          - { name: 'backend/services/comic', type: 'backend' }
          - { name: 'backend/services/file', type: 'backend' }
          - { name: 'backend/services/wallet', type: 'backend' }
          - { name: 'backend/services/payment', type: 'backend' }
          - { name: 'backend/services/loyalty', type: 'backend' }
          - { name: 'backend/services/nft', type: 'backend' }
          - { name: 'backend/services/notification', type: 'backend' }
          - { name: 'backend/services/analytics', type: 'backend' }
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          cache: 'pnpm'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: ${{ matrix.package.name }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.package.type }}.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload SARIF results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results-${{ matrix.package.type }}.sarif

  notify-failure:
    runs-on: ubuntu-latest
    needs: [lint-test-build, security-scan]
    if: failure()
    steps:
      - name: Notify failure on PR (GitHub comment)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ CI failed for ${{ matrix.package.name }} on ${{ github.ref }}! @${{ github.actor }}, please fix errors. Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
      - name: Notify failure on push (GitHub issue)
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'CI Failure on ${{ github.ref }} - Commit ${{ github.sha }}',
              body: '⚠️ CI failed for ${{ matrix.package.name }}! @${{ github.actor }}, please fix. Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              assignees: ['${{ github.actor }}']
            })
      - name: Notify commit author on failure (push)
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `@${{ github.actor }} CI failed for ${{ matrix.package.name }}. Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            })