name: Deploy to AWS (CDK)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: CDK Deploy to AWS
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_REGION: eu-east-1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          cache: 'pnpm'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy with CDK
        run: pnpm cdk deploy --all --require-approval never
        working-directory: infra
      - name: Run smoke tests
        run: pnpm --filter backend exec pnpm test:smoke  # Add smoke test script
      - name: Monitor deployment
        run: |
          aws cloudwatch get-metric-statistics --namespace AWS/ECS --metric-name CPUUtilization --period 300 --statistics Average --dimensions Name=ClusterName,Value=nerdwork-cluster
          echo "✅ Deployment monitored. Check CloudWatch for details." >> $GITHUB_STEP_SUMMARY
      - name: Notify success (GitHub comment)
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number || github.run_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Deployment to AWS successful! Smoke tests passed. View status in checks.'
            })
      - name: Notify failure (GitHub comment/issue)
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Deployment Failure - ${{ github.sha }}',
              body: '❌ Deployment failed. Please investigate logs and checks.'
            })